import express, { Request, Response } from "express"
import cors from "cors"

const app = express()

app.use(cors())
app.use(express.json())
app.listen(3003, () => console.log("Servidor dispon√≠vel em 3003"))

//Exerc√≠cio 1 - Fa√ßa novamente a instala√ß√£o e configura√ß√£o do Express na pasta do exerc√≠cio. Para testar, crie um endpoint que aponte para o path ‚Äú/ping‚Äù. Esse endpoint pode responder apenas com uma mensagem ‚Äúpong‚Äù.
app.get("/ping", (req:Request, res:Response) => {          
  res.send("Pong! üèì")
})

//Exerc√≠cio 2 - Acesse a API do JSONPlaceholder e observe os endpoints que buscam afazeres (‚Äùto dos‚Äù). Crie uma vari√°vel de tipo para representar cada afazer.
type dataToDo = {
  userId:string,
  id:string,
  title:string,
  completed:boolean
}

//Exerc√≠cio 3 - Crie um array de afazeres para servir como base de dados da nossa API e utilize a tipagem desenvolvida no exerc√≠cio anterior.
const user:dataToDo[]= [
  {  
    userId:"U001",
    id:"001",
    title:"Lavar pratos",
    completed:true
  },
  {
    userId:"U002",
    id:"002",
    title:"Limpar a area de estudos",
    completed:false
  },
  {
    userId:"U003",
    id:"003",
    title:"Pausa pra descanso",
    completed:false
  },
  {
    userId:"U004",
    id:"004",
    title:"Estudar",
    completed:true
  }
] 

//Exerc√≠cio 4 Construa um endpoint que retorne todos os afazeres do exerc√≠cio anterior de acordo com um √∫nico status, ou seja, retorne ou afazeres conclu√≠dos ou somente os que ainda est√£o em andamento.